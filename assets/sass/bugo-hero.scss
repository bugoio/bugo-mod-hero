/**
 * BUGO HERO
 *
 * * note
 * TODO: something
 * ! Deprecate
 * ? Question
 * @param myParam
 **/

@import "bugo-hero-vars";

 .hero {
  grid-area: hero;

  @if $hero-show == false {
    display: none;
  } @else {
    display: grid;
  }
  position: relative;
  width: 100%;
  @include ms-respond(padding-top, $hero-padding-top);
  @include ms-respond(padding-bottom, $hero-padding-bottom);
  @include ms-respond(margin-top, $hero-margin-top);
  @include ms-respond(margin-bottom, $hero-margin-bottom);

  @if $hero-container == true {
    @extend .container;
    @include ms-respond(padding-left, $global-padding);
    @include ms-respond(padding-right, $global-padding);
  }

  align-items: stretch;
  margin: 0;
  z-index: 1;

  @if $hero-border == true {
    border-bottom-color: $hero-border-color;
    border-bottom-style: $hero-border-style;
    @include ms-respond(border-bottom-width, $hero-border-width);
  }

  background-color: $hero-background;

  // set padding y
  // @include aspect-ratio( $hero-padding-y );

  transition: padding-bottom 0.5s;

  &.spacer {
    padding: 0;
    @include ms-respond(height, $hero-spacer-height);
    background-color: $hero-background;
  }

  &::before {
    content: "";
    display: $hero-screen-display;
    width: 100%;
    height: 100%;
    background: $hero-screen-bg;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
  }

  .hero-image {
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    object-fit: cover;
    width: 100%;
    height: 100%;
    filter: $hero-image-filter;
    z-index: -1;
  }

  .container {
    height: 100%;
    position: relative;
    width: 100%;
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    z-index: 1001;
    grid-template-areas: "herotxt";
  }

  .hero-text {
    grid-area: herotxt;
    position: relative;
    color: $hero-color;
    align-self: center;
    // @include ms-respond(font-size, $hero-font);
    // font-family: $hero-font-family;
    max-width: $hero-maxchar;
    z-index: 10000000;
    @include ms-respond(padding-bottom, $global-padding);

    h1,
    .h1,
    h2,
    .h2,
    h3,
    .h3,
    h4,
    .h4,
    h5,
    .h5,
    h6,
    .h6 {
      color: $hero-color;
      // font-weight: $hero-heading-weight;
    }

    @include heading-size(h1, $hero-1);
    @include heading-size(h2, $hero-2);
    @include heading-size(h3, $hero-3);
    @include heading-size(h4, $hero-4);
    @include heading-size(h5, $hero-5);
    @include heading-size(h6, $hero-6);

    > * {
      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}

.hero-video {
  position: relative;
  overflow: hidden;
  z-index: 0;
  background: $hero-background;

  img {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: $hero-image-filter;
  }

  video {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: none;
    object-fit: cover;
    filter: $hero-image-filter;
  }

  #video-bg-control {
    display: none;
    position: absolute;
    z-index: 100;
    top: $hero-control-top;
    right: $hero-control-right;
    bottom: $hero-control-bottom;
    left: $hero-control-left;
    background-color: $hero-control-bg;
    opacity: 0.7;

    &:hover {
      opacity: 1;
    }

    svg {
      @include ms-respond(width, $hero-control-icon-width);
      @include ms-respond(height, $hero-control-icon-height);
      width: 32px;
      height: 32px;
    }
  }

  @include respond-to("lg") {
    video,
    #video-bg-control {
      display: block;
    }

    img {
      display: none;
    }
  }
}

